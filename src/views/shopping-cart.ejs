<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Carrito de Compras</title>
    <link rel="stylesheet" href="/css/styles.css">
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- Font Awesome Icons -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11.4.10/dist/sweetalert2.min.css">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.4.10/dist/sweetalert2.all.min.js"></script>
    <style>
        /* Estilo para el menú lateral */
        .sidebar {
            position: fixed;
            top: 0;
            left: -250px; /* Inicia oculto a la izquierda */
            width: 250px;
            height: 100%;
            background-color: #333;
            color: white;
            padding-top: 20px;
            transition: left 0.3s ease;
            z-index: 1000;
        }

        .sidebar a {
            color: white;
            padding: 10px 15px;
            text-decoration: none;
            font-size: 18px;
            display: block;
        }

        .sidebar a:hover {
            background-color: #575757;
        }

        .sidebar-close {
            position: absolute;
            top: 20px;
            right: 25px;
            font-size: 36px;
            color: white;
            cursor: pointer;
        }
        /* Botón de menú hamburguesa */
        .menu-toggle {
            font-size: 30px;
            color: rgb(0, 162, 198);
            cursor: pointer;
            display: block;
        }
        
        /* Efecto de zoom en las imágenes al hacer clic */
        .product-image {
            transition: transform 0.3s ease;
            cursor: pointer;
        }

        .product-image:hover {
            transform: scale(1.2); /* Hace que la imagen se acerque */
        }

        /* Zoom de imagen cuando es clickeada */
        .zoomed {
            transform: scale(1.5);
        }

        /* Reducir el tamaño de la tarjeta */
        .card {
            width: 100%; /* Ancho completo dentro de la columna */
            max-width: 280px; /* Maximo ancho de la tarjeta */
            margin: 0 auto; /* Centrar la tarjeta */
        }

        /* Reducir el tamaño de la imagen */
        .card-img-top {
            height: 300px; /* Ajustar la altura de las imágenes */
            object-fit: cover; /* Asegurarse de que la imagen se recorte y ajuste */
            border-radius: 10px;
        }

        /* Ajustar el tamaño de los botones */
        .btn-primary {
            font-size: 0.9rem;
            padding: 10px;
        }

        .card-body {
            padding: 15px;
        }

        /* Ajuste de márgenes */
        .col-md-4 {
            margin-bottom: 10px;
        }

        /* Footer Estilo */
        footer {
            background-color: #333;
            color: white;
            text-align: center;
            padding: 20px;
            margin-top: 50px;
        }

        footer a {
            color: #fff;
            text-decoration: none;
        }
        .social-icons a {
            transition: transform 0.3s ease, color 0.3s ease;
        }
        
        .social-icons a:hover {
            transform: scale(1.2); /* Aumentar tamaño al pasar el mouse */
            color: #007bff; /* Cambiar color al pasar el mouse */
        }
        /* Ajustes responsivos para el menú hamburguesa */
        @media screen and (max-width: 768px) {
            .sidebar {
                width: 0;
            }

            .menu-toggle {
                display: block;
            }

            .container {
                margin-left: 0;
            }
        }
         /* Estilo para el contenido principal */
         .content {
            transition: margin-left 0.3s ease;
            padding-left: 0;
        }

        .content.active {
            margin-left: 250px;
        }
        /* Estilo del contenido principal */
        .container {
            transition: margin-left 0.3s ease;
        }

    </style>
</head>
<!-- Contenedor principal con menú hamburguesa -->
<div class="content">
    <nav class="navbar navbar-expand-lg">
        <div class="container-fluid">
            <a class="navbar-brand" href="http://localhost:3000/">Bienvenid@ a ISaix Store®</a>
            <div class="form-check form-switch ms-auto">
                <input class="form-check-input" type="checkbox" id="darkModeToggle">
                <label class="form-check-label" for="darkModeToggle">Modo Oscuro</label>
            </div><br>
            <br><div><span class="menu-toggle" onclick="openMenu()">&#9776;</span></div>
        </div>
    </nav>
</div>
<body>
    <!-- Menú Lateral (Sidebar) -->
    <div id="sidebar" class="sidebar">
        <span class="sidebar-close" onclick="closeMenu()">&times;</span>
        <a href="/">Inicio</a>
        <a href="/shopping-cart">Carrito de Compras</a>
        <a href="/register">Registro</a>
        <a href="/login">Iniciar Sesión</a>
        <a href="/admin/products/">Administrar Productos</a>
        <a href="/admin/orders/">Administrar Pedidos</a>
    </div>
    <div class="container mt-5">
        <h1 class="text-center mb-4">Carrito de Compras</h1>

        <% if (carrito && carrito.length > 0) { %>
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>Producto</th>
                        <th>Cantidad</th>
                        <th>Precio Unitario</th>
                        <th>Subtotal</th>
                        <th>Acciones</th>
                    </tr>
                </thead>
                <tbody>
                    <% carrito.forEach((item, index) => { %>
                        <tr>
                            <td>
                                <img src="<%= item.imagen %>" alt="<%= item.nombre %>" width="50">
                                <%= item.nombre %>
                            </td>
                            <td><%= item.cantidad %></td>
                            <td>$<%= item.precio %></td>
                            <td>$<%= item.precio * item.cantidad %></td>
                            <td>
                                <!-- Botón para editar la cantidad -->
                                <button class="btn btn-warning btn-sm edit-quantity" data-index="<%= index %>">
                                    Editar
                                </button>
                                <!-- Botón para eliminar el producto -->
                                <button class="btn btn-danger btn-sm remove-item" data-index="<%= index %>">
                                    Eliminar
                                </button>
                            </td>
                        </tr>
                    <% }); %>
                </tbody>
            </table>
            <div class="text-end">
                <h4>Total: $<%= carrito.reduce((sum, item) => sum + item.precio * item.cantidad, 0) %></h4>
            </div>
        <% } else { %>
            <p class="text-center text-muted">Tu carrito está vacío</p>
        <% } %>

        <!-- Formulario de envío del pedido -->
        <div class="mt-5">
            <h1 class="text-center mb-4">Finalizar Pedido</h1>
            <form id="confirmOrderForm" action="/confirm-order" method="POST">
                <div class="mb-3">
                    <label for="cliente" class="form-label">Nombre del Cliente:</label>
                    <input type="text" class="form-control" id="cliente" name="cliente" required>
                </div>
                <div class="mb-3">
                    <label for="direccion" class="form-label">Dirección:</label>
                    <input type="text" class="form-control" id="direccion" name="direccion" required>
                </div>
                <div class="mb-3">
                    <label for="telefono" class="form-label">Teléfono:</label>
                    <input type="text" class="form-control" id="telefono" name="telefono" required>
                </div>
                <button type="button" class="btn btn-success" id="confirmOrderButton">Confirmar Pedido</button>
            </form>            
        </div>
    </div>
     <!-- Footer -->
     <footer class="bg-dark text-white text-center py-4 mt-5">
        <p>&copy; 2024 ISaix Store®. Todos los derechos reservados.</p>
        <p><a href="/contact" class="text-white">Contacto</a> | <a href="/privacy-policy" class="text-white">Política de Privacidad</a></p>
        
        <!-- Redes Sociales -->
        <div class="social-icons mt-3">
            <a href="https://www.facebook.com" target="_blank" class="text-white mx-3">
                <i class="fab fa-facebook fa-2x"></i>
            </a>
            <a href="https://www.instagram.com" target="_blank" class="text-white mx-3">
                <i class="fab fa-instagram fa-2x"></i>
            </a>
            <a href="https://twitter.com" target="_blank" class="text-white mx-3">
                <i class="fab fa-twitter fa-2x"></i>
            </a>
            <a href="https://www.linkedin.com" target="_blank" class="text-white mx-3">
                <i class="fab fa-linkedin fa-2x"></i>
            </a>
        </div>
    </footer>
    <script>
        // Función para cambiar el modo claro/oscuro
        const toggle = document.getElementById('darkModeToggle');
        const body = document.body;
        
        // Cargar la preferencia guardada
        const currentMode = localStorage.getItem('mode');
        if (currentMode === 'dark') {
            body.classList.add('dark-mode');
            toggle.checked = true;
        }
        
        // Manejar el cambio de modo
        toggle.addEventListener('change', () => {
            if (toggle.checked) {
                body.classList.add('dark-mode');
                localStorage.setItem('mode', 'dark'); // Guardar preferencia
            } else {
                body.classList.remove('dark-mode');
                localStorage.setItem('mode', 'light'); // Guardar preferencia
            }
        });

        // Función para abrir el menú lateral
        function openMenu() {
            document.getElementById("sidebar").style.left = "0";  // Abrir el menú lateral
            document.querySelector('.content').classList.add('active'); // Desplazar el contenido
        }

        // Función para cerrar el menú lateral
        function closeMenu() {
            document.getElementById("sidebar").style.left = "-250px"; // Cerrar el menú lateral
            document.querySelector('.content').classList.remove('active'); // Volver el contenido a su posición original
        }

        // Función para manejar la edición de cantidad
        document.querySelectorAll('.edit-quantity').forEach(button => {
            button.addEventListener('click', async (event) => {
                const index = event.target.dataset.index;

                // Mostrar un cuadro de entrada con SweetAlert2 para editar la cantidad
                const { value: quantity } = await Swal.fire({
                    title: 'Editar Cantidad',
                    input: 'number',
                    inputLabel: 'Nueva cantidad:',
                    inputValue: 1,
                    showCancelButton: true,
                    confirmButtonText: 'Actualizar',
                    cancelButtonText: 'Cancelar',
                    inputValidator: (value) => {
                        if (!value || value <= 0) {
                            return 'Por favor ingresa una cantidad válida.';
                        }
                    }
                });

                if (quantity) {
                    try {
                        const response = await fetch('/update-cart', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify({ index, cantidad: parseInt(quantity) })
                        });

                        if (response.ok) {
                            Swal.fire(
                                'Cantidad Actualizada',
                                'La cantidad del producto ha sido actualizada.',
                                'success'
                            ).then(() => {
                                window.location.reload();
                            });
                        } else {
                            Swal.fire(
                                'Error',
                                'Hubo un problema al actualizar la cantidad.',
                                'error'
                            );
                        }
                    } catch (error) {
                        Swal.fire(
                            'Error',
                            'Ocurrió un error en la solicitud.',
                            'error'
                        );
                    }
                }
            });
        });

        // Función para manejar la eliminación de productos
        document.querySelectorAll('.remove-item').forEach(button => {
            button.addEventListener('click', async (event) => {
                const index = event.target.dataset.index;

                // Confirmar eliminación con SweetAlert2
                const result = await Swal.fire({
                    title: '¿Eliminar producto?',
                    text: 'Esta acción no se puede deshacer.',
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonText: 'Sí, eliminar',
                    cancelButtonText: 'Cancelar'
                });

                if (result.isConfirmed) {
                    try {
                        const response = await fetch('/remove-from-cart', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify({ index })
                        });

                        if (response.ok) {
                            Swal.fire(
                                'Eliminado',
                                'El producto ha sido eliminado del carrito.',
                                'success'
                            ).then(() => {
                                window.location.reload();
                            });
                        } else {
                            Swal.fire(
                                'Error',
                                'Hubo un problema al eliminar el producto.',
                                'error'
                            );
                        }
                    } catch (error) {
                        Swal.fire(
                            'Error',
                            'Ocurrió un error en la solicitud.',
                            'error'
                        );
                    }
                }
            });
        });

        // Función para confirmar el pedido
            document.getElementById('confirmOrderButton').addEventListener('click', async () => {
                const form = document.getElementById('confirmOrderForm');
                const formData = new FormData(form);
        
                const data = {
                    cliente: formData.get('cliente'),
                    direccion: formData.get('direccion'),
                    telefono: formData.get('telefono'),
                };
        
                try {
                    const response = await fetch('/confirm-order', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify(data),
                    });
        
                    const result = await response.json();
        
                    if (result.message) {
                        Swal.fire('¡Éxito!', result.message, 'success').then(() => {
                            window.location.href = '/'; // Redirige después de confirmar
                        });
                    } else {
                        throw new Error(result.error || 'Error desconocido');
                    }
                } catch (error) {
                    Swal.fire('Error', error.message, 'error');
                }
            });
    </script>
</body>
</html>
